{"version":3,"file":"RowActionsCell.js","sourceRoot":"","sources":["../../src/draggable/RowActionsCell.js"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,SAAS,MAAM,YAAY,CAAC;AACnC,OAAO,EAAE,UAAU,EAAE,MAAM,WAAW,CAAC;AACvC,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;AAEpD;IAA6B,kCAAe;IAA5C;;IA+CA,CAAC;IA9BC,uCAAc,GAAd;QACE,OAAO,CACL,6BAAK,SAAS,EAAC,eAAe,IAC1B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CACnB,CACP,CAAC;IACJ,CAAC;IAED,+BAAM,GAAN;QACQ,IAAA,eAAgD,EAA9C,wCAAiB,EAAE,8BAA2B,CAAC;QACvD,IAAM,cAAc,GAAG,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC9F,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACpC,IAAM,WAAW,GAAG,UAAU,CAAC,CAAC,CAAC,+BAA+B,CAAC,CAAC,CAAC,sBAAsB,CAAC;QAE1F,OAAO,iBAAiB,CACtB;YACE,6BAAK,SAAS,EAAC,qBAAqB,EAAC,KAAK,EAAE,cAAc,GAAI;YAC7D,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,IAAI;YAC1C,YAAY,IAAI,IAAI,IAAI,CACvB,6BAAK,SAAS,EAAE,WAAW;gBACzB,oBAAC,cAAc,IACb,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EACzB,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EACzB,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,EAC3C,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GACvB,CACE,CACP,CACG,CAAC,CAAC;IACZ,CAAC;IA7CM,wBAAS,GAAG;QACjB,MAAM,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU;QACnC,iBAAiB,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU;QAC5C,kBAAkB,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU;QAC7C,UAAU,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU;QACrC,YAAY,EAAE,SAAS,CAAC,IAAI;QAC5B,MAAM,EAAE,SAAS,CAAC,MAAM;QACxB,eAAe,EAAE,SAAS,CAAC,MAAM;QACjC,KAAK,EAAE,SAAS,CAAC,IAAI;QACrB,YAAY,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU;KAC1C,CAAC;IAEK,2BAAY,GAAG;QACpB,MAAM,EAAE,CAAC;KACV,CAAC;IAgCJ,qBAAC;CAAA,AA/CD,CAA6B,KAAK,CAAC,SAAS,GA+C3C;AAED,SAAS,OAAO,CAAC,OAAO,EAAE,OAAO;IAC/B,OAAO;QACL,iBAAiB,EAAE,OAAO,CAAC,UAAU,EAAE;QACvC,UAAU,EAAE,OAAO,CAAC,UAAU,EAAE;QAChC,kBAAkB,EAAE,OAAO,CAAC,WAAW,EAAE;KAC1C,CAAC;AACJ,CAAC;AAED,IAAM,cAAc,GAAG;IACrB,SAAS,YAAC,KAAK;QACb,OAAO,EAAE,GAAG,EAAE,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,eAAe,EAAE,CAAC;IAC5D,CAAC;IACD,OAAO,YAAC,KAAK;QACX,OAAO,EAAE,GAAG,EAAE,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,eAAe,EAAE,CAAC;IAC5D,CAAC;CACF,CAAC;AAEF,eAAe,UAAU,CAAC,KAAK,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC,cAAc,CAAC,CAAC","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragSource } from 'react-dnd';\nimport { CheckboxEditor } from 'react-data-grid-v7';\n\nclass RowActionsCell extends React.Component {\n  static propTypes = {\n    rowIdx: PropTypes.number.isRequired,\n    connectDragSource: PropTypes.func.isRequired,\n    connectDragPreview: PropTypes.func.isRequired,\n    isDragging: PropTypes.bool.isRequired,\n    isRowHovered: PropTypes.bool,\n    column: PropTypes.object,\n    dependentValues: PropTypes.object,\n    value: PropTypes.bool,\n    rowSelection: PropTypes.object.isRequired\n  };\n\n  static defaultProps = {\n    rowIdx: 0\n  };\n\n  renderRowIndex() {\n    return (\n      <div className=\"rdg-row-index\">\n        { this.props.rowIdx + 1 }\n      </div>\n    );\n  }\n\n  render() {\n    const { connectDragSource, rowSelection } = this.props;\n    const rowHandleStyle = rowSelection != null ? { position: 'absolute', marginTop: '5px' } : {};\n    const isSelected = this.props.value;\n    const editorClass = isSelected ? 'rdg-actions-checkbox selected' : 'rdg-actions-checkbox';\n\n    return connectDragSource(\n      <div>\n        <div className=\"rdg-drag-row-handle\" style={rowHandleStyle} />\n        {!isSelected ? this.renderRowIndex() : null}\n        {rowSelection != null && (\n          <div className={editorClass}>\n            <CheckboxEditor\n              column={this.props.column}\n              rowIdx={this.props.rowIdx}\n              dependentValues={this.props.dependentValues}\n              value={this.props.value}\n            />\n          </div>\n        )}\n      </div>);\n  }\n}\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n    connectDragPreview: connect.dragPreview()\n  };\n}\n\nconst rowIndexSource = {\n  beginDrag(props) {\n    return { idx: props.rowIdx, data: props.dependentValues };\n  },\n  endDrag(props) {\n    return { idx: props.rowIdx, data: props.dependentValues };\n  }\n};\n\nexport default DragSource('Row', rowIndexSource, collect)(RowActionsCell);\n"]}