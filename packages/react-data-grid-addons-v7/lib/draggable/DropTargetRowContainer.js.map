{"version":3,"file":"DropTargetRowContainer.js","sourceRoot":"","sources":["../../src/draggable/DropTargetRowContainer.js"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,QAAQ,MAAM,WAAW,CAAC;AACjC,OAAO,EAAE,UAAU,EAAE,MAAM,WAAW,CAAC;AACvC,OAAO,EAAE,WAAW,EAAE,MAAM,oBAAoB,CAAC;AAEjD,IAAM,aAAa,GAAG,UAAC,GAAG,IAAK;IAAc,2BAAe;IAA7B;;IA2B/B,CAAC;IA1BC,uCAAqB,GAArB,UAAsB,SAAS;QAC7B,OAAO,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;IAED,yBAAO,GAAP;QACE,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACtD,CAAC;IAED,wBAAM,GAAN;QAAA,iBAiBC;QAhBO,IAAA,eAAmD,EAAjD,wCAAiB,EAAE,kBAAM,EAAE,oBAAsB,CAAC;QAC1D,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACtD,OAAO,iBAAiB,CACtB;YACE,oBAAC,GAAG,aAAC,GAAG,EAAE,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,GAAG,GAAG,IAAI,EAAf,CAAe,IAAM,IAAI,CAAC,KAAK,EAAI;YACtD,MAAM,IAAI,OAAO,IAAI,CACpB,6BACE,SAAS,EAAC,eAAe,EACzB,KAAK,EAAE;oBACL,GAAG,EAAE,UAAU;oBACf,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;iBAC1B,GACD,CACH,CACG,CACP,CAAC;IACJ,CAAC;IACH,cAAC;AAAD,CAAC,AA3B8B,CAAc,KAAK,CAAC,SAAS,IAA7B,CA2B9B,CAAC;AAEF,IAAM,MAAM,GAAG;IACb,IAAI,YAAC,KAAK,EAAE,OAAO,EAAE,SAAS;QAC5B,0BAA0B;QAC1B,SAAS,CAAC,OAAO,EAAE,CAAC;QACpB,IAAM,SAAS,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;QACpC,IAAM,SAAS,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC;QACtD,KAAK,CAAC,SAAS,CAAC,EAAE,SAAS,WAAA,EAAE,SAAS,WAAA,EAAE,CAAC,CAAC;IAC5C,CAAC;CACF,CAAC;AAEF,SAAS,OAAO,CAAC,OAAO,EAAE,OAAO;IAC/B,OAAO;QACL,iBAAiB,EAAE,OAAO,CAAC,UAAU,EAAE;QACvC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE;QACxB,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE;QAC1B,UAAU,EAAE,OAAO,CAAC,OAAO,EAAE;KAC9B,CAAC;AACJ,CAAC;AAED,gBAAe,UAAC,GAAG,IAAK,OAAA,UAAU,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,aAAa,EAAE,UAAC,SAAS,EAAE,YAAY,IAAK,OAAA,CAAC,WAAW,CAAC,SAAS,EAAE,YAAY,CAAC,EAArC,CAAqC,EAAE,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAA7I,CAA6I,EAAC","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DropTarget } from 'react-dnd';\nimport { rowComparer } from 'react-data-grid-v7';\n\nconst rowDropTarget = (Row) => class extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    return rowComparer(nextProps, this.props);\n  }\n\n  moveRow() {\n    ReactDOM.findDOMNode(this).classList.add('slideUp');\n  }\n\n  render() {\n    const { connectDropTarget, isOver, canDrop } = this.props;\n    const overlayTop = this.props.idx * this.props.height;\n    return connectDropTarget(\n      <div>\n        <Row ref={(node) => this.row = node} {...this.props} />\n        {isOver && canDrop && (\n          <div\n            className=\"rowDropTarget\"\n            style={{\n              top: overlayTop,\n              height: this.props.height\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n};\n\nconst target = {\n  drop(props, monitor, component) {\n    // Obtain the dragged item\n    component.moveRow();\n    const rowSource = monitor.getItem();\n    const rowTarget = { idx: props.idx, data: props.row };\n    props.onRowDrop({ rowSource, rowTarget });\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    canDrop: monitor.canDrop(),\n    draggedRow: monitor.getItem()\n  };\n}\n\nexport default (Row) => DropTarget('Row', target, collect, { arePropsEqual: (nextProps, currentProps) => !rowComparer(nextProps, currentProps) })(rowDropTarget(Row));\n"]}