{"version":3,"file":"RowDragLayer.js","sourceRoot":"","sources":["../../src/draggable/RowDragLayer.js"],"names":[],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DragLayer } from 'react-dnd';\n\nimport * as Selectors from '../data/Selectors';\n\nconst layerStyles = {\n  cursor: '-webkit-grabbing',\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 100,\n  left: 0,\n  top: 0,\n  width: '100%',\n  height: '100%'\n};\n\nfunction getItemStyles(props) {\n  const { currentOffset } = props;\n  if (!currentOffset) {\n    return {\n      display: 'none'\n    };\n  }\n\n  const { x, y } = currentOffset;\n  const transform = `translate(${x}px, ${y}px)`;\n  return {\n    transform,\n    WebkitTransform: transform\n  };\n}\n\nclass CustomDragLayer extends Component {\n  static propTypes = {\n    item: PropTypes.object,\n    itemType: PropTypes.string,\n    currentOffset: PropTypes.shape({\n      x: PropTypes.number.isRequired,\n      y: PropTypes.number.isRequired\n    }),\n    isDragging: PropTypes.bool.isRequired,\n    rowSelection: PropTypes.object,\n    rows: PropTypes.array.isRequired,\n    columns: PropTypes.array.isRequired\n  };\n\n  isDraggedRowSelected(selectedRows) {\n    const { item, rowSelection } = this.props;\n    if (selectedRows && selectedRows.length > 0) {\n      const key = rowSelection.selectBy.keys.rowKey;\n      return selectedRows.filter(r => r[key] === item.data[key]).length > 0;\n    }\n    return false;\n  }\n\n  getDraggedRows() {\n    let draggedRows;\n    const { rowSelection } = this.props;\n    if (rowSelection && rowSelection.selectBy.keys) {\n      const rows = this.props.rows;\n      const { rowKey, values } = rowSelection.selectBy.keys;\n      const selectedRows = Selectors.getSelectedRowsByKey({ rowKey, selectedKeys: values, rows });\n      draggedRows = this.isDraggedRowSelected(selectedRows) ? selectedRows : [this.props.rows[this.props.item.idx]];\n    } else {\n      draggedRows = [this.props.rows[this.props.item.idx]];\n    }\n    return draggedRows;\n  }\n\n  renderDraggedRows() {\n    const columns = this.props.columns;\n    return this.getDraggedRows().map((r, i) => {\n      return <tr key={`dragged-row-${i}`}>{this.renderDraggedCells(r, i, columns) }</tr>;\n    });\n  }\n\n  renderDraggedCells(item, rowIdx, columns) {\n    const cells = [];\n    if (item != null) {\n      columns.forEach(c => {\n        if (item.hasOwnProperty(c.key)) {\n          if (c.formatter) {\n            const Formatter = c.formatter;\n            const dependentValues = typeof c.getRowMetaData === 'function' ? c.getRowMetaData(item, c) : {};\n            cells.push(<td key={`dragged-cell-${rowIdx}-${c.key}`} className=\"react-grid-Cell\" style={{ padding: '5px' }}><Formatter dependentValues={dependentValues} value={item[c.key]} /></td>);\n          } else {\n            cells.push(<td key={`dragged-cell-${rowIdx}-${c.key}`} className=\"react-grid-Cell\" style={{ padding: '5px' }}>{item[c.key]}</td>);\n          }\n        }\n      });\n    }\n    return cells;\n  }\n\n  render() {\n    const { isDragging } = this.props;\n    if (!isDragging) {\n      return null;\n    }\n    const draggedRows = this.renderDraggedRows();\n    return (\n      <div style={layerStyles} className=\"rdg-dragging\">\n        <div style={getItemStyles(this.props)} className=\"rdg-dragging\">\n          <table><tbody>{draggedRows}</tbody></table>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction collect(monitor) {\n  return {\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nexport default DragLayer(collect)(CustomDragLayer);\n"]}